# Environment example for the server
# Copy this file to .env and fill in the real values for local development.
# Do NOT commit secrets to source control. Use .env.local or a secrets manager for real tokens.

########################################
# Contentstack Configuration
########################################
# Contentstack API Host (CMA)
CONTENTSTACK_API_HOST=https://eu-api.contentstack.com

# Contentstack Delivery API (CDA)
CONTENTSTACK_DELIVERY_API=https://eu-cdn.contentstack.com

# Your Contentstack API Key (CDA)
CONTENTSTACK_API_KEY=your_contentstack_api_key

# Your Contentstack Delivery / Preview Tokens
CONTENTSTACK_DELIVERY_TOKEN=your_contentstack_delivery_token
CONTENTSTACK_PREVIEW_TOKEN=your_contentstack_preview_token

# Management token (CMA) used for updates
CONTENTSTACK_MANAGEMENT_TOKEN=your_contentstack_management_token

# Environment / branch
CONTENTSTACK_ENVIRONMENT=development
CONTENTSTACK_BRANCH=main

########################################
# Server / App
########################################
NEXT_PUBLIC_API_BASE=http://localhost:3000
SERVER_PORT=3001
NODE_ENV=development
SERVER_URL=http://localhost:3001

# CORS allowed origins (comma separated)
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

########################################
# Rate limiting
########################################
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_READS=200
RATE_LIMIT_MAX_WRITES=60

########################################
# NER / spaCy microservice
########################################
# Enable NER integration (true/false)
ENABLE_NER=false

# spaCy service base URL
SPACY_SERVICE_URL=http://localhost:8000

# Optional API key forwarded to the spaCy service via `x-api-key` (leave blank if unused)
SPACY_API_KEY=

# NER rate limiting (server-side)
NER_RATE_LIMIT_WINDOW_MS=60000
NER_RATE_LIMIT_MAX=30

# Use the local fake NER implementation instead of the external spaCy service
USE_FAKE_NER=false

# Timeouts/retries/circuit breaker tuning for NER calls
NER_TIMEOUT_MS=10000
NER_RETRY_COUNT=3
NER_CIRCUIT_BREAKER_FAILURES=5
NER_CIRCUIT_BREAKER_TIMEOUT=30000
NER_CIRCUIT_BREAKER_SUCCESS=3

########################################
# Queueing / persistence
########################################
# If provided, BullMQ will use Redis at this URL. Otherwise an in-memory fallback is used.
REDIS_URL=redis://localhost:6379

# For Docker demos (if you start Redis in docker-compose), use the internal service name:
# REDIS_URL=redis://redis:6379

########################################
# Logging / misc
########################################
LOG_LEVEL=info

########################################
# Integrations (optional)
########################################
# Slack integration placeholders (fill if you enable Slack notifications)
SLACK_BOT_TOKEN=
SLACK_SIGNING_SECRET=
SLACK_CHANNEL2=